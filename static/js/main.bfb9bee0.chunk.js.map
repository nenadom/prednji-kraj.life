{"version":3,"sources":["config.js","ListPage.js","ControlMapperRow.js","ControlsModal.js","FrameTimer.js","GamepadController.js","KeyboardController.js","Screen.js","utils.js","Speakers.js","Emulator.js","RunPage.js","App.js","index.js"],"names":["config","ROMS","owlia","name","description","href","target","rel","url","nomolos","croom","lj65","tecmo","GOOGLE_ANALYTICS_CODE","process","REACT_APP_GOOGLE_ANALYTICS_CODE","SENTRY_URI","REACT_APP_SENTRY_URI","Component","ListPage","ControlMapperRow","constructor","props","super","this","state","playerOneButton","playerTwoButton","waitingForKey","handleClick","bind","componentDidMount","keys","button","playerButtons","key","console","log","setState","componentDidUpdate","prevProps","prevState","gamepadButton","newButton","searchButton","gamepadConfig","buttonId","buttons","filter","b","searchNewButton","prevGamepadConfig","some","b2","waitingForKeyPlayer","gamepadButtonName","type","code","value","playerGamepadId","configs","prevButton","newState","currentPromptButton","Object","length","player","render","buttonName","onClick","GAMEPAD_ICON","ControlsModal","undefined","modified","handleKeyDown","handleGamepadButtonDown","listenForKey","controllerIcon","map","gamepadId","controllerIconAlt","componentWillUnmount","setKeys","setGamepadConfig","removeKeyListener","promptButton","document","addEventListener","buttonInfo","playerId","slice","newConfig","concat","assign","event","newKeys","keyCode","String","toUpperCase","removeEventListener","Modal","isOpen","toggle","className","ModalHeader","ModalBody","Table","src","alt","Controller","BUTTON_LEFT","BUTTON_SELECT","BUTTON_RIGHT","BUTTON_UP","BUTTON_DOWN","BUTTON_A","BUTTON_B","BUTTON_START","ModalFooter","Button","outline","color","FrameTimer","onAnimationFrame","time","requestAnimationFrame","excess","interval","newFrameTime","lastFrameTime","numFrames","Math","round","generateFrame","onWriteFrame","timeToNextFrame","i","setTimeout","onGenerateFrame","running","start","stop","_requestID","window","cancelAnimationFrame","GamepadController","options","disableIfGamepadEnabled","callback","self","_getPlayerNumberFromGamepad","gamepad","id","poll","gamepads","navigator","getGamepads","webkitGetGamepads","usedPlayers","gamepadIndex","previousGamepad","gamepadState","previousButtons","buttonCallback","axes","axis","previousAxis","previousButton","pressed","playerNumber","indexOf","push","configButtons","configButton","onButtonDown","onButtonUp","f","loadGamepadConfig","localStorage","getItem","JSON","parse","e","setItem","stringify","startPolling","stopped","loop","KEYS","88","89","90","17","13","38","40","37","39","103","105","99","97","104","98","100","102","KeyboardController","loadKeys","preventDefault","handleKeyUp","handleKeyPress","Screen","setBuffer","buffer","y","x","buf32","writeBuffer","imageData","data","set","buf8","context","putImageData","fitInParent","parent","canvas","parentNode","parentWidth","clientWidth","parentHeight","clientHeight","style","width","height","handleMouseDown","onMouseDown","scale","parseFloat","rect","getBoundingClientRect","clientX","left","clientY","top","onMouseUp","ref","initCanvas","getContext","getImageData","fillStyle","fillRect","buf","ArrayBuffer","Uint8ClampedArray","Uint32Array","screenshot","img","Image","toDataURL","handleError","error","errorInfo","Raven","captureException","extra","Speakers","onBufferUnderrun","writeSample","right","size","bufferSize","deqN","enq","onaudioprocess","outputBuffer","getChannelData","samples","j","RingBuffer","getSampleRate","AudioContext","myCtx","sampleRate","close","audioCtx","scriptNode","createScriptProcessor","connect","destination","disconnect","catch","Emulator","frameTimer","speakers","fpsInterval","setInterval","nes","getFPS","clearInterval","screen","frame","zapperMove","zapperFireDown","zapperFireUp","actualSize","desiredSize","paused","NES","onFrame","onStatusUpdate","onAudioSample","wrap","gamepadController","buttonDown","buttonUp","gamepadPolling","keyboardController","loadROM","romData","RunPage","load","currentRequest","path","handleProgress","req","XMLHttpRequest","open","overrideMimeType","onload","status","responseText","match","Error","statusText","onerror","onprogress","send","loadBinary","err","message","handleLoaded","lengthComputable","loadedPercent","loaded","total","loading","handlePauseResume","layout","navbarHeight","getComputedStyle","navbar","screenContainer","innerHeight","emulator","toggleControlsModal","controlsModalOpen","romName","started","el","disabled","Progress","position","marginTop","abort","App","recordPageview","location","GoogleAnalytics","pageview","pathname","initialize","componentDidCatch","install","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bfb9bee0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst config = {\n  ROMS: {\n    owlia: {\n      name: \"The Legends of Owlia\",\n      description: (\n        <span>\n          <a\n            href=\"http://www.gradualgames.com/p/the-legends-of-owlia_1.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Owlia by Gradual Games\n          </a>{\" \"}\n          /{\" \"}\n          <a\n            href=\"http://www.infiniteneslives.com/owlia.php\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Buy the cartridge\n          </a>\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/owlia.nes\",\n    },\n    nomolos: {\n      name: \"Nomolos: Storming the Catsle\",\n      description: (\n        <span>\n          <a\n            href=\"http://www.gradualgames.com/p/nomolos-storming-catsle.html\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Monolos by Gradual Games\n          </a>{\" \"}\n          /{\" \"}\n          <a\n            href=\"http://www.infiniteneslives.com/nomolos.php\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Buy the cartridge\n          </a>\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/nomolos.nes\",\n    },\n    croom: {\n      name: \"Concentration Room\",\n      description: (\n        <span>\n          <a\n            href=\"http://www.pineight.com/croom/README\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Concentration Room\n          </a>{\" \"}\n          by Damian Yerrick\n        </span>\n      ),\n      url:\n        \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/croom/croom.nes\",\n    },\n    lj65: {\n      name: \"LJ65\",\n      description: (\n        <span>\n          <a\n            href=\"http://harddrop.com/wiki/LJ65\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Concentration Room\n          </a>{\" \"}\n          by Damian Yerrick\n        </span>\n      ),\n      url: \"https://cdn.jsdelivr.net/gh/bfirsh/jsnes-roms@master/lj65/lj65.nes\",\n    },\n    tecmo: {\n      name: \"Tecmo World Cup Soccer\",\n      description: <span>Tecmo World Cup Soccer</span>,\n      url: \"/roms/tecmo_world_cup_soccer.nes\",\n    },\n  },\n  GOOGLE_ANALYTICS_CODE: process.env.REACT_APP_GOOGLE_ANALYTICS_CODE,\n  SENTRY_URI: process.env.REACT_APP_SENTRY_URI,\n};\n\nexport default config;\n","import React, { Component } from \"react\";\nimport \"./ListPage.css\";\nimport { ListGroup } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport config from \"./config\";\n\nimport RomLibrary from \"./RomLibrary\";\n\nclass ListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      romLibrary: RomLibrary.load()\n    };\n  }\n  render() {\n    return (\n      <div\n        className=\"drop-zone\"\n        onDragOver={this.handleDragOver}\n        onDrop={this.handleDrop}\n      >\n        <div className=\"container ListPage py-4\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              <header className=\"mb-4\">\n                <h1 className=\"mb-3\">JSNES</h1>\n                <p>\n                  A JavaScript NES emulator.{\" \"}\n                  <a href=\"https://github.com/bfirsh/jsnes\">\n                    Source on GitHub.\n                  </a>\n                </p>\n              </header>\n\n              <ListGroup className=\"mb-4\">\n                {Object.keys(config.ROMS)\n                  .sort()\n                  .map(key => (\n                    <Link\n                      key={key}\n                      to={\"/run/\" + encodeURIComponent(key)}\n                      className=\"list-group-item\"\n                    >\n                      {config.ROMS[key][\"name\"]}\n                      <span className=\"float-right\">&rsaquo;</span>\n                    </Link>\n                  ))}\n              </ListGroup>\n\n              <p>\n                Or, drag and drop a ROM file onto the page to play it. (Google\n                may help you find them.)\n              </p>\n\n              {this.state.romLibrary.length > 0 ? (\n                <div>\n                  <p>Previously played:</p>\n\n                  <ListGroup className=\"mb-4\">\n                    {this.state.romLibrary\n                      .sort((a, b) => new Date(b.added) - new Date(a.added))\n                      .map(rom => (\n                        <Link\n                          key={rom.hash}\n                          to={\"run/local-\" + rom.hash}\n                          className=\"list-group-item\"\n                        >\n                          {rom.name}\n                          <span\n                            onClick={e => {\n                              e.preventDefault();\n                              this.deleteRom(rom.hash);\n                            }}\n                            className=\"delete\"\n                            title=\"Delete\"\n                          >\n                            &times;\n                          </span>\n                          <span className=\"float-right\">&rsaquo;</span>\n                        </Link>\n                      ))}\n                  </ListGroup>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  deleteRom = hash => {\n    RomLibrary.delete(hash);\n    this.updateLibrary();\n  };\n\n  updateLibrary = () => {\n    this.setState({ romLibrary: RomLibrary.load() });\n  };\n\n  handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"copy\";\n  };\n\n  handleDrop = e => {\n    e.preventDefault();\n\n    const file = e.dataTransfer.items\n      ? e.dataTransfer.items[0].getAsFile()\n      : e.dataTransfer.files[0];\n\n    RomLibrary.save(file).then(rom => {\n      this.updateLibrary();\n      this.props.history.push({ pathname: \"run/local-\" + rom.hash });\n    });\n  };\n}\n\nexport default ListPage;\n","import React, { Component } from \"react\";\n\nclass ControlMapperRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerOneButton: \"\",\n      playerTwoButton: \"\",\n      waitingForKey: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    var keys = this.props.keys;\n    var button = this.props.button;\n    var playerButtons = [];\n    for (var key in keys) {\n      if (keys[key][0] === 1 && keys[key][1] === button) {\n        playerButtons[0] = keys[key][2];\n        console.log(playerButtons[0]);\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\n        playerButtons[1] = keys[key][2];\n      }\n    }\n    this.setState({\n      playerOneButton: playerButtons[0],\n      playerTwoButton: playerButtons[1]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    var keys = this.props.keys;\n    var button = this.props.button;\n    var playerButtons = [];\n    var gamepadButton;\n    var newButton;\n\n    for (var key in keys) {\n      if (keys[key][0] === 1 && keys[key][1] === button) {\n        playerButtons[0] = keys[key][2];\n        console.log(playerButtons[0]);\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\n        playerButtons[1] = keys[key][2];\n      }\n    }\n\n    var searchButton = (gamepadConfig, buttonId) => {\n      return gamepadConfig.buttons.filter(b => b.buttonId === buttonId)[0];\n    };\n\n    var searchNewButton = (prevGamepadConfig, gamepadConfig) => {\n      return gamepadConfig.buttons.filter(b => {\n        return (\n          !prevGamepadConfig ||\n          !prevGamepadConfig.buttons.some(b2 => b2.buttonId === b.buttonId)\n        );\n      })[0];\n    };\n\n    var waitingForKey = 0;\n    var waitingForKeyPlayer = 0;\n\n    var gamepadButtonName = gamepadButton => {\n      if (gamepadButton.type === \"button\") return \"Btn-\" + gamepadButton.code;\n      if (gamepadButton.type === \"axis\")\n        return \"Axis-\" + gamepadButton.code + \" \" + gamepadButton.value;\n    };\n\n    if (this.props.gamepadConfig && this.props.gamepadConfig.playerGamepadId) {\n      const playerGamepadId = this.props.gamepadConfig.playerGamepadId;\n      if (playerGamepadId[0]) {\n        playerButtons[0] = \"\";\n        gamepadButton = searchButton(\n          this.props.gamepadConfig.configs[playerGamepadId[0]],\n          button\n        );\n        newButton = searchNewButton(\n          prevProps.gamepadConfig.configs[playerGamepadId[0]],\n          this.props.gamepadConfig.configs[playerGamepadId[0]]\n        );\n        if (gamepadButton) {\n          playerButtons[0] = gamepadButtonName(gamepadButton);\n        } else {\n          if (newButton && newButton.buttonId === this.props.prevButton) {\n            if (!waitingForKey) {\n              waitingForKey = 1;\n              waitingForKeyPlayer = 1;\n            }\n          }\n        }\n      }\n\n      if (playerGamepadId[1]) {\n        playerButtons[1] = \"\";\n        gamepadButton = searchButton(\n          this.props.gamepadConfig.configs[playerGamepadId[1]],\n          button\n        );\n        newButton = searchNewButton(\n          prevProps.gamepadConfig.configs[playerGamepadId[1]],\n          this.props.gamepadConfig.configs[playerGamepadId[1]]\n        );\n        if (gamepadButton) {\n          playerButtons[1] = gamepadButtonName(gamepadButton);\n        } else {\n          if (newButton && newButton.buttonId === this.props.prevButton) {\n            if (!waitingForKey) {\n              waitingForKey = 2;\n              waitingForKeyPlayer = 2;\n            }\n          }\n        }\n      }\n    }\n\n    var newState = {};\n\n    if (waitingForKey) {\n      this.props.handleClick([waitingForKeyPlayer, this.props.button]);\n    }\n    // Prevent setState being called repeatedly\n    if (\n      prevState.playerOneButton !== playerButtons[0] ||\n      prevState.playerTwoButton !== playerButtons[1]\n    ) {\n      newState.playerOneButton = playerButtons[0];\n      newState.playerTwoButton = playerButtons[1];\n    }\n\n    if (waitingForKey) {\n      newState.waitingForKey = waitingForKey;\n    } else if (prevState.waitingForKey === 1) {\n      if (this.props.currentPromptButton !== this.props.button) {\n        newState.waitingForKey = 0;\n      }\n    } else if (prevState.waitingForKey === 2) {\n      if (this.props.currentPromptButton !== this.props.button) {\n        newState.waitingForKey = 0;\n      }\n    }\n\n    if (Object.keys(newState).length > 0) {\n      this.setState(newState);\n    }\n  }\n\n  handleClick(player) {\n    this.props.handleClick([player, this.props.button]);\n    this.setState({\n      waitingForKey: player\n    });\n  }\n\n  render() {\n    const waitingText = \"Press key or button...\";\n    return (\n      <tr>\n        <td>{this.props.buttonName}</td>\n        <td onClick={() => this.handleClick(1)}>\n          {this.state.waitingForKey === 1\n            ? waitingText\n            : this.state.playerOneButton}\n        </td>\n        <td onClick={() => this.handleClick(2)}>\n          {this.state.waitingForKey === 2\n            ? waitingText\n            : this.state.playerTwoButton}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ControlMapperRow;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from \"reactstrap\";\nimport { Controller } from \"jsnes\";\nimport ControlMapperRow from \"./ControlMapperRow\";\n\nconst GAMEPAD_ICON = \"../img/nes_controller.png\";\nconst KEYBOARD_ICON = \"../img/keyboard.png\";\n\nclass ControlsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gamepadConfig: props.gamepadConfig,\n      keys: props.keys,\n      button: undefined,\n      modified: false\n    };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleGamepadButtonDown = this.handleGamepadButtonDown.bind(this);\n    this.listenForKey = this.listenForKey.bind(this);\n\n    this.state.gamepadConfig = this.state.gamepadConfig || {};\n    this.state.gamepadConfig.playerGamepadId = this.state.gamepadConfig\n      .playerGamepadId || [null, null];\n    this.state.gamepadConfig.configs = this.state.gamepadConfig.configs || {};\n\n    this.state.controllerIcon = this.state.gamepadConfig.playerGamepadId.map(\n      gamepadId => (gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON)\n    );\n    this.state.controllerIconAlt = this.state.gamepadConfig.playerGamepadId.map(\n      gamepadId => (gamepadId ? \"gamepad\" : \"keyboard\")\n    );\n    this.state.currentPromptButton = -1;\n  }\n\n  componentWillUnmount() {\n    if (this.state.modified) {\n      this.props.setKeys(this.state.keys);\n      this.props.setGamepadConfig(this.state.gamepadConfig);\n    }\n    this.removeKeyListener();\n  }\n\n  listenForKey(button) {\n    var currentPromptButton = button[1];\n\n    this.removeKeyListener();\n    this.setState({ button, currentPromptButton });\n    this.props.promptButton(this.handleGamepadButtonDown);\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleGamepadButtonDown(buttonInfo) {\n    this.removeKeyListener();\n\n    var button = this.state.button;\n\n    const playerId = button[0];\n    const buttonId = button[1];\n\n    const gamepadId = buttonInfo.gamepadId;\n    const gamepadConfig = this.state.gamepadConfig;\n\n    // link player to gamepad\n    const playerGamepadId = gamepadConfig.playerGamepadId.slice(0);\n    const newConfig = {};\n\n    playerGamepadId[playerId - 1] = gamepadId;\n\n    const rejectButtonId = b => {\n      return b.buttonId !== buttonId;\n    };\n\n    const newButton = {\n      code: buttonInfo.code,\n      type: buttonInfo.type,\n      buttonId: buttonId,\n      value: buttonInfo.value\n    };\n    newConfig[gamepadId] = {\n      buttons: (gamepadConfig.configs[gamepadId] || { buttons: [] }).buttons\n        .filter(rejectButtonId)\n        .concat([newButton])\n    };\n\n    const configs = Object.assign({}, gamepadConfig.configs, newConfig);\n\n    this.setState({\n      gamepadConfig: {\n        configs: configs,\n        playerGamepadId: playerGamepadId\n      },\n      currentPromptButton: -1,\n      controllerIcon: playerGamepadId.map(gamepadId =>\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\n      ),\n      modified: true\n    });\n  }\n\n  handleKeyDown(event) {\n    this.removeKeyListener();\n\n    var button = this.state.button;\n    var keys = this.state.keys;\n    var newKeys = {};\n    for (var key in keys) {\n      if (keys[key][0] !== button[0] || keys[key][1] !== button[1]) {\n        newKeys[key] = keys[key];\n      }\n    }\n\n    const playerGamepadId = this.state.gamepadConfig.playerGamepadId.slice(0);\n    const playerId = button[0];\n    playerGamepadId[playerId - 1] = null;\n\n    this.setState({\n      keys: {\n        ...newKeys,\n        [event.keyCode]: [\n          ...button.slice(0, 2),\n          event.key.length > 1 ? event.key : String(event.key).toUpperCase()\n        ]\n      },\n      button: undefined,\n      gamepadConfig: {\n        configs: this.state.gamepadConfig.configs,\n        playerGamepadId: playerGamepadId\n      },\n      currentPromptButton: -1,\n      controllerIcon: playerGamepadId.map(gamepadId =>\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\n      ),\n      controllerIconAlt: playerGamepadId.map(gamepadId =>\n        gamepadId ? \"gamepad\" : \"keyboard\"\n      ),\n      modified: true\n    });\n  }\n\n  removeKeyListener() {\n    this.props.promptButton(null);\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        toggle={this.props.toggle}\n        className=\"ControlsModal\"\n      >\n        <ModalHeader toggle={this.props.toggle}>Controls</ModalHeader>\n        <ModalBody>\n          <Table>\n            <thead>\n              <tr>\n                <th>Button</th>\n                <th>\n                  Player 1\n                  <img\n                    className=\"controller-icon\"\n                    src={this.state.controllerIcon[0]}\n                    alt={this.state.controllerIconAlt[0]}\n                  />\n                </th>\n                <th>\n                  Player 2\n                  <img\n                    className=\"controller-icon\"\n                    src={this.state.controllerIcon[1]}\n                    alt={this.state.controllerIconAlt[1]}\n                  />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <ControlMapperRow\n                buttonName=\"Left\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_LEFT}\n                prevButton={Controller.BUTTON_SELECT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Right\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_RIGHT}\n                prevButton={Controller.BUTTON_LEFT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Up\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_UP}\n                prevButton={Controller.BUTTON_RIGHT}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Down\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_DOWN}\n                prevButton={Controller.BUTTON_UP}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"A\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_A}\n                prevButton={Controller.BUTTON_DOWN}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"B\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_B}\n                prevButton={Controller.BUTTON_A}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Start\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_START}\n                prevButton={Controller.BUTTON_B}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n              <ControlMapperRow\n                buttonName=\"Select\"\n                currentPromptButton={this.state.currentPromptButton}\n                button={Controller.BUTTON_SELECT}\n                prevButton={Controller.BUTTON_START}\n                keys={this.state.keys}\n                handleClick={this.listenForKey}\n                gamepadConfig={this.state.gamepadConfig}\n              />\n            </tbody>\n          </Table>\n        </ModalBody>\n        <ModalFooter>\n          <Button outline color=\"primary\" onClick={this.props.toggle}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nexport default ControlsModal;\n","const FPS = 60.098;\n\nexport default class FrameTimer {\n  constructor(props) {\n    // Run at 60 FPS\n    this.onGenerateFrame = props.onGenerateFrame;\n    // Run on animation frame\n    this.onWriteFrame = props.onWriteFrame;\n    this.onAnimationFrame = this.onAnimationFrame.bind(this);\n    this.running = true;\n    this.interval = 1e3 / FPS;\n    this.lastFrameTime = false;\n  }\n\n  start() {\n    this.running = true;\n    this.requestAnimationFrame();\n  }\n\n  stop() {\n    this.running = false;\n    if (this._requestID) window.cancelAnimationFrame(this._requestID);\n    this.lastFrameTime = false;\n  }\n\n  requestAnimationFrame() {\n    this._requestID = window.requestAnimationFrame(this.onAnimationFrame);\n  }\n\n  generateFrame() {\n    this.onGenerateFrame();\n    this.lastFrameTime += this.interval;\n  }\n\n  onAnimationFrame = time => {\n    this.requestAnimationFrame();\n    // how many ms after 60fps frame time\n    let excess = time % this.interval;\n\n    // newFrameTime is the current time aligned to 60fps intervals.\n    // i.e. 16.6, 33.3, etc ...\n    let newFrameTime = time - excess;\n\n    // first frame, do nothing\n    if (!this.lastFrameTime) {\n      this.lastFrameTime = newFrameTime;\n      return;\n    }\n\n    let numFrames = Math.round(\n      (newFrameTime - this.lastFrameTime) / this.interval\n    );\n\n    // This can happen a lot on a 144Hz display\n    if (numFrames === 0) {\n      //console.log(\"WOAH, no frames\");\n      return;\n    }\n\n    // update display on first frame only\n    this.generateFrame();\n    this.onWriteFrame();\n\n    // we generate additional frames evenly before the next\n    // onAnimationFrame call.\n    // additional frames are generated but not displayed\n    // until next frame draw\n    let timeToNextFrame = this.interval - excess;\n    for (let i = 1; i < numFrames; i++) {\n      setTimeout(() => {\n        this.generateFrame();\n      }, (i * timeToNextFrame) / numFrames);\n    }\n    if (numFrames > 1) console.log(\"SKIP\", numFrames - 1, this.lastFrameTime);\n  };\n}\n","export default class GamepadController {\n  constructor(options) {\n    this.onButtonDown = options.onButtonDown;\n    this.onButtonUp = options.onButtonUp;\n    this.gamepadState = [];\n    this.buttonCallback = null;\n  }\n\n  disableIfGamepadEnabled = callback => {\n    var self = this;\n    return (playerId, buttonId) => {\n      if (!self.gamepadConfig) {\n        return callback(playerId, buttonId);\n      }\n\n      var playerGamepadId = self.gamepadConfig.playerGamepadId;\n      if (!playerGamepadId || !playerGamepadId[playerId - 1]) {\n        // allow callback only if player is not associated to any gamepad\n        return callback(playerId, buttonId);\n      }\n    };\n  };\n\n  _getPlayerNumberFromGamepad = gamepad => {\n    if (this.gamepadConfig.playerGamepadId[0] === gamepad.id) {\n      return 1;\n    }\n\n    if (this.gamepadConfig.playerGamepadId[1] === gamepad.id) {\n      return 2;\n    }\n\n    return 1;\n  };\n\n  poll = () => {\n    const gamepads = navigator.getGamepads\n      ? navigator.getGamepads()\n      : navigator.webkitGetGamepads();\n\n    const usedPlayers = [];\n\n    for (let gamepadIndex = 0; gamepadIndex < gamepads.length; gamepadIndex++) {\n      const gamepad = gamepads[gamepadIndex];\n      const previousGamepad = this.gamepadState[gamepadIndex];\n\n      if (!gamepad) {\n        continue;\n      }\n\n      if (!previousGamepad) {\n        this.gamepadState[gamepadIndex] = gamepad;\n        continue;\n      }\n\n      const buttons = gamepad.buttons;\n      const previousButtons = previousGamepad.buttons;\n\n      if (this.buttonCallback) {\n        for (let code = 0; code < gamepad.axes.length; code++) {\n          const axis = gamepad.axes[code];\n          const previousAxis = previousGamepad.axes[code];\n\n          if (axis === -1 && previousAxis !== -1) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"axis\",\n              code: code,\n              value: axis\n            });\n          }\n\n          if (axis === 1 && previousAxis !== 1) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"axis\",\n              code: code,\n              value: axis\n            });\n          }\n        }\n\n        for (let code = 0; code < buttons.length; code++) {\n          const button = buttons[code];\n          const previousButton = previousButtons[code];\n          if (button.pressed && !previousButton.pressed) {\n            this.buttonCallback({\n              gamepadId: gamepad.id,\n              type: \"button\",\n              code: code\n            });\n          }\n        }\n      } else if (this.gamepadConfig) {\n        let playerNumber = this._getPlayerNumberFromGamepad(gamepad);\n        if (usedPlayers.length < 2) {\n          if (usedPlayers.indexOf(playerNumber) !== -1) {\n            playerNumber++;\n            if (playerNumber > 2) playerNumber = 1;\n          }\n          usedPlayers.push(playerNumber);\n\n          if (this.gamepadConfig.configs[gamepad.id]) {\n            const configButtons = this.gamepadConfig.configs[gamepad.id]\n              .buttons;\n\n            for (let i = 0; i < configButtons.length; i++) {\n              const configButton = configButtons[i];\n              if (configButton.type === \"button\") {\n                const code = configButton.code;\n                const button = buttons[code];\n                const previousButton = previousButtons[code];\n\n                if (button.pressed && !previousButton.pressed) {\n                  this.onButtonDown(playerNumber, configButton.buttonId);\n                } else if (!button.pressed && previousButton.pressed) {\n                  this.onButtonUp(playerNumber, configButton.buttonId);\n                }\n              } else if (configButton.type === \"axis\") {\n                const code = configButton.code;\n                const axis = gamepad.axes[code];\n                const previousAxis = previousGamepad.axes[code];\n\n                if (\n                  axis === configButton.value &&\n                  previousAxis !== configButton.value\n                ) {\n                  this.onButtonDown(playerNumber, configButton.buttonId);\n                }\n\n                if (\n                  axis !== configButton.value &&\n                  previousAxis === configButton.value\n                ) {\n                  this.onButtonUp(playerNumber, configButton.buttonId);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      this.gamepadState[gamepadIndex] = {\n        buttons: buttons.map(b => {\n          return { pressed: b.pressed };\n        }),\n        axes: gamepad.axes.slice(0)\n      };\n    }\n  };\n\n  promptButton = f => {\n    if (!f) {\n      this.buttonCallback = f;\n    } else {\n      this.buttonCallback = buttonInfo => {\n        this.buttonCallback = null;\n        f(buttonInfo);\n      };\n    }\n  };\n\n  loadGamepadConfig = () => {\n    var gamepadConfig;\n    try {\n      gamepadConfig = localStorage.getItem(\"gamepadConfig\");\n      if (gamepadConfig) {\n        gamepadConfig = JSON.parse(gamepadConfig);\n      }\n    } catch (e) {\n      console.log(\"Failed to get gamepadConfig from localStorage.\", e);\n    }\n\n    this.gamepadConfig = gamepadConfig;\n  };\n\n  setGamepadConfig = gamepadConfig => {\n    try {\n      localStorage.setItem(\"gamepadConfig\", JSON.stringify(gamepadConfig));\n      this.gamepadConfig = gamepadConfig;\n    } catch (e) {\n      console.log(\"Failed to set gamepadConfig in localStorage\");\n    }\n  };\n\n  startPolling = () => {\n    if (!(navigator.getGamepads || navigator.webkitGetGamepads)) {\n      return { stop: () => {} };\n    }\n\n    let stopped = false;\n    const loop = () => {\n      if (stopped) return;\n\n      this.poll();\n      requestAnimationFrame(loop);\n    };\n    requestAnimationFrame(loop);\n\n    return {\n      stop: () => {\n        stopped = true;\n      }\n    };\n  };\n}\n","import { Controller } from \"jsnes\";\n\n// Mapping keyboard code to [controller, button]\nconst KEYS = {\n  88: [1, Controller.BUTTON_A, \"X\"], // X\n  89: [1, Controller.BUTTON_B, \"Y\"], // Y (Central European keyboard)\n  90: [1, Controller.BUTTON_B, \"Z\"], // Z\n  17: [1, Controller.BUTTON_SELECT, \"Right Ctrl\"], // Right Ctrl\n  13: [1, Controller.BUTTON_START, \"Enter\"], // Enter\n  38: [1, Controller.BUTTON_UP, \"Up\"], // Up\n  40: [1, Controller.BUTTON_DOWN, \"Down\"], // Down\n  37: [1, Controller.BUTTON_LEFT, \"Left\"], // Left\n  39: [1, Controller.BUTTON_RIGHT, \"Right\"], // Right\n  103: [2, Controller.BUTTON_A, \"Num-7\"], // Num-7\n  105: [2, Controller.BUTTON_B, \"Num-9\"], // Num-9\n  99: [2, Controller.BUTTON_SELECT, \"Num-3\"], // Num-3\n  97: [2, Controller.BUTTON_START, \"Num-1\"], // Num-1\n  104: [2, Controller.BUTTON_UP, \"Num-8\"], // Num-8\n  98: [2, Controller.BUTTON_DOWN, \"Num-2\"], // Num-2\n  100: [2, Controller.BUTTON_LEFT, \"Num-4\"], // Num-4\n  102: [2, Controller.BUTTON_RIGHT, \"Num-6\"] // Num-6\n};\n\nexport default class KeyboardController {\n  constructor(options) {\n    this.onButtonDown = options.onButtonDown;\n    this.onButtonUp = options.onButtonUp;\n  }\n\n  loadKeys = () => {\n    var keys;\n    try {\n      keys = localStorage.getItem(\"keys\");\n      if (keys) {\n        keys = JSON.parse(keys);\n      }\n    } catch (e) {\n      console.log(\"Failed to get keys from localStorage.\", e);\n    }\n\n    this.keys = keys || KEYS;\n  };\n\n  setKeys = newKeys => {\n    try {\n      localStorage.setItem(\"keys\", JSON.stringify(newKeys));\n      this.keys = newKeys;\n    } catch (e) {\n      console.log(\"Failed to set keys in localStorage\");\n    }\n  };\n\n  handleKeyDown = e => {\n    var key = this.keys[e.keyCode];\n    if (key) {\n      this.onButtonDown(key[0], key[1]);\n      e.preventDefault();\n    }\n  };\n\n  handleKeyUp = e => {\n    var key = this.keys[e.keyCode];\n    if (key) {\n      this.onButtonUp(key[0], key[1]);\n      e.preventDefault();\n    }\n  };\n\n  handleKeyPress = e => {\n    e.preventDefault();\n  };\n}\n","import React, { Component } from \"react\";\nimport \"./Screen.css\";\n\nconst SCREEN_WIDTH = 256;\nconst SCREEN_HEIGHT = 240;\n\nclass Screen extends Component {\n  render() {\n    return (\n      <canvas\n        className=\"Screen\"\n        width={SCREEN_WIDTH}\n        height={SCREEN_HEIGHT}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.props.onMouseUp}\n        ref={canvas => {\n          this.canvas = canvas;\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.initCanvas();\n  }\n\n  componentDidUpdate() {\n    this.initCanvas();\n  }\n\n  initCanvas() {\n    this.context = this.canvas.getContext(\"2d\");\n    this.imageData = this.context.getImageData(\n      0,\n      0,\n      SCREEN_WIDTH,\n      SCREEN_HEIGHT\n    );\n\n    this.context.fillStyle = \"black\";\n    // set alpha to opaque\n    this.context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n\n    // buffer to write on next animation frame\n    this.buf = new ArrayBuffer(this.imageData.data.length);\n    // Get the canvas buffer in 8bit and 32bit\n    this.buf8 = new Uint8ClampedArray(this.buf);\n    this.buf32 = new Uint32Array(this.buf);\n\n    // Set alpha\n    for (var i = 0; i < this.buf32.length; ++i) {\n      this.buf32[i] = 0xff000000;\n    }\n  }\n\n  setBuffer = buffer => {\n    var i = 0;\n    for (var y = 0; y < SCREEN_HEIGHT; ++y) {\n      for (var x = 0; x < SCREEN_WIDTH; ++x) {\n        i = y * 256 + x;\n        // Convert pixel from NES BGR to canvas ABGR\n        this.buf32[i] = 0xff000000 | buffer[i]; // Full alpha\n      }\n    }\n  };\n\n  writeBuffer = () => {\n    this.imageData.data.set(this.buf8);\n    this.context.putImageData(this.imageData, 0, 0);\n  };\n\n  fitInParent = () => {\n    let parent = this.canvas.parentNode;\n    // @ts-ignore\n    let parentWidth = parent.clientWidth;\n    // @ts-ignore\n    let parentHeight = parent.clientHeight;\n    let parentRatio = parentWidth / parentHeight;\n    let desiredRatio = SCREEN_WIDTH / SCREEN_HEIGHT;\n    if (desiredRatio < parentRatio) {\n      this.canvas.style.width = `${Math.round(parentHeight * desiredRatio)}px`;\n      this.canvas.style.height = `${parentHeight}px`;\n    } else {\n      this.canvas.style.width = `${parentWidth}px`;\n      this.canvas.style.height = `${Math.round(parentWidth / desiredRatio)}px`;\n    }\n  };\n\n  screenshot() {\n    var img = new Image();\n    img.src = this.canvas.toDataURL(\"image/png\");\n    return img;\n  }\n\n  handleMouseDown = e => {\n    if (!this.props.onMouseDown) return;\n    // Make coordinates unscaled\n    let scale = SCREEN_WIDTH / parseFloat(this.canvas.style.width);\n    let rect = this.canvas.getBoundingClientRect();\n    let x = Math.round((e.clientX - rect.left) * scale);\n    let y = Math.round((e.clientY - rect.top) * scale);\n    this.props.onMouseDown(x, y);\n  };\n}\n\nexport default Screen;\n","import Raven from \"raven-js\";\n\nexport const handleError = (error, errorInfo) => {\n  console.error(error);\n  Raven.captureException(error, { extra: errorInfo });\n};\n\nexport function loadBinary(path, callback, handleProgress) {\n  var req = new XMLHttpRequest();\n  req.open(\"GET\", path);\n  req.overrideMimeType(\"text/plain; charset=x-user-defined\");\n  req.onload = function() {\n    if (this.status === 200) {\n      if (req.responseText.match(/^<!doctype html>/i)) {\n        // Got HTML back, so it is probably falling back to index.html due to 404\n        return callback(new Error(\"Page not found\"));\n      }\n\n      callback(null, this.responseText);\n    } else if (this.status === 0) {\n      // Aborted, so ignore error\n    } else {\n      callback(new Error(req.statusText));\n    }\n  };\n  req.onerror = function() {\n    callback(new Error(req.statusText));\n  };\n  req.onprogress = handleProgress;\n  req.send();\n  return req;\n}\n","import RingBuffer from \"ringbufferjs\";\nimport { handleError } from \"./utils\";\n\nexport default class Speakers {\n  constructor({ onBufferUnderrun }) {\n    this.onBufferUnderrun = onBufferUnderrun;\n    this.bufferSize = 8192;\n    this.buffer = new RingBuffer(this.bufferSize * 2);\n  }\n\n  getSampleRate() {\n    if (!window.AudioContext) {\n      return 44100;\n    }\n    let myCtx = new window.AudioContext();\n    let sampleRate = myCtx.sampleRate;\n    myCtx.close();\n    return sampleRate;\n  }\n\n  start() {\n    // Audio is not supported\n    if (!window.AudioContext) {\n      return;\n    }\n    this.audioCtx = new window.AudioContext();\n    this.scriptNode = this.audioCtx.createScriptProcessor(1024, 0, 2);\n    this.scriptNode.onaudioprocess = this.onaudioprocess;\n    this.scriptNode.connect(this.audioCtx.destination);\n  }\n\n  stop() {\n    if (this.scriptNode) {\n      this.scriptNode.disconnect(this.audioCtx.destination);\n      this.scriptNode.onaudioprocess = null;\n      this.scriptNode = null;\n    }\n    if (this.audioCtx) {\n      this.audioCtx.close().catch(handleError);\n      this.audioCtx = null;\n    }\n  }\n\n  writeSample = (left, right) => {\n    if (this.buffer.size() / 2 >= this.bufferSize) {\n      console.log(`Buffer overrun`);\n      this.buffer.deqN(this.bufferSize / 2);\n    }\n    this.buffer.enq(left);\n    this.buffer.enq(right);\n  };\n\n  onaudioprocess = e => {\n    var left = e.outputBuffer.getChannelData(0);\n    var right = e.outputBuffer.getChannelData(1);\n    var size = left.length;\n\n    // We're going to buffer underrun. Attempt to fill the buffer.\n    if (this.buffer.size() < size * 2 && this.onBufferUnderrun) {\n      this.onBufferUnderrun(this.buffer.size(), size * 2);\n    }\n\n    try {\n      var samples = this.buffer.deqN(size * 2);\n    } catch (e) {\n      // onBufferUnderrun failed to fill the buffer, so handle a real buffer\n      // underrun\n\n      // ignore empty buffers... assume audio has just stopped\n      var bufferSize = this.buffer.size() / 2;\n      if (bufferSize > 0) {\n        console.log(`Buffer underrun (needed ${size}, got ${bufferSize})`);\n      }\n      for (var j = 0; j < size; j++) {\n        left[j] = 0;\n        right[j] = 0;\n      }\n      return;\n    }\n    for (var i = 0; i < size; i++) {\n      left[i] = samples[i * 2];\n      right[i] = samples[i * 2 + 1];\n    }\n  };\n}\n","import Raven from \"raven-js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NES } from \"jsnes\";\n\nimport FrameTimer from \"./FrameTimer\";\nimport GamepadController from \"./GamepadController\";\nimport KeyboardController from \"./KeyboardController\";\nimport Screen from \"./Screen\";\nimport Speakers from \"./Speakers\";\n\n/*\n * Runs the emulator.\n *\n * The only UI is a canvas element. It assumes it is a singleton in various ways\n * (binds to window, keyboard, speakers, etc).\n */\nclass Emulator extends Component {\n  render() {\n    return (\n      <Screen\n        ref={screen => {\n          this.screen = screen;\n        }}\n        onGenerateFrame={() => {\n          this.nes.frame();\n        }}\n        onMouseDown={(x, y) => {\n          this.nes.zapperMove(x, y);\n          this.nes.zapperFireDown();\n        }}\n        onMouseUp={() => {\n          this.nes.zapperFireUp();\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    // Initial layout\n    this.fitInParent();\n\n    this.speakers = new Speakers({\n      onBufferUnderrun: (actualSize, desiredSize) => {\n        if (this.props.paused) {\n          return;\n        }\n        // Skip a video frame so audio remains consistent. This happens for\n        // a variety of reasons:\n        // - Frame rate is not quite 60fps, so sometimes buffer empties\n        // - Page is not visible, so requestAnimationFrame doesn't get fired.\n        //   In this case emulator still runs at full speed, but timing is\n        //   done by audio instead of requestAnimationFrame.\n        // - System can't run emulator at full speed. In this case it'll stop\n        //    firing requestAnimationFrame.\n        console.log(\n          \"Buffer underrun, running another frame to try and catch up\"\n        );\n\n        this.frameTimer.generateFrame();\n        // desiredSize will be 2048, and the NES produces 1468 samples on each\n        // frame so we might need a second frame to be run. Give up after that\n        // though -- the system is not catching up\n        if (this.speakers.buffer.size() < desiredSize) {\n          console.log(\"Still buffer underrun, running a second frame\");\n          this.frameTimer.generateFrame();\n        }\n      }\n    });\n\n    this.nes = new NES({\n      onFrame: this.screen.setBuffer,\n      onStatusUpdate: console.log,\n      onAudioSample: this.speakers.writeSample,\n      sampleRate: this.speakers.getSampleRate()\n    });\n\n    // For debugging. ([\"nes\"] instead of .nes to avoid VS Code type errors.)\n    window[\"nes\"] = this.nes;\n\n    this.frameTimer = new FrameTimer({\n      onGenerateFrame: Raven.wrap(this.nes.frame),\n      onWriteFrame: Raven.wrap(this.screen.writeBuffer)\n    });\n\n    // Set up gamepad and keyboard\n    this.gamepadController = new GamepadController({\n      onButtonDown: this.nes.buttonDown,\n      onButtonUp: this.nes.buttonUp\n    });\n\n    this.gamepadController.loadGamepadConfig();\n    this.gamepadPolling = this.gamepadController.startPolling();\n\n    this.keyboardController = new KeyboardController({\n      onButtonDown: this.gamepadController.disableIfGamepadEnabled(\n        this.nes.buttonDown\n      ),\n      onButtonUp: this.gamepadController.disableIfGamepadEnabled(\n        this.nes.buttonUp\n      )\n    });\n\n    // Load keys from localStorage (if they exist)\n    this.keyboardController.loadKeys();\n\n    document.addEventListener(\"keydown\", this.keyboardController.handleKeyDown);\n    document.addEventListener(\"keyup\", this.keyboardController.handleKeyUp);\n    document.addEventListener(\n      \"keypress\",\n      this.keyboardController.handleKeyPress\n    );\n\n    this.nes.loadROM(this.props.romData);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n\n    // Unbind keyboard\n    document.removeEventListener(\n      \"keydown\",\n      this.keyboardController.handleKeyDown\n    );\n    document.removeEventListener(\"keyup\", this.keyboardController.handleKeyUp);\n    document.removeEventListener(\n      \"keypress\",\n      this.keyboardController.handleKeyPress\n    );\n\n    // Stop gamepad\n    this.gamepadPolling.stop();\n\n    window[\"nes\"] = undefined;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.paused !== prevProps.paused) {\n      if (this.props.paused) {\n        this.stop();\n      } else {\n        this.start();\n      }\n    }\n\n    // TODO: handle changing romData\n  }\n\n  start = () => {\n    this.frameTimer.start();\n    this.speakers.start();\n    this.fpsInterval = setInterval(() => {\n      console.log(`FPS: ${this.nes.getFPS()}`);\n    }, 1000);\n  };\n\n  stop = () => {\n    this.frameTimer.stop();\n    this.speakers.stop();\n    clearInterval(this.fpsInterval);\n  };\n\n  /*\n   * Fill parent element with screen. Typically called if parent element changes size.\n   */\n  fitInParent() {\n    this.screen.fitInParent();\n  }\n}\n\nEmulator.propTypes = {\n  paused: PropTypes.bool,\n  romData: PropTypes.string.isRequired\n};\n\nexport default Emulator;\n","import React, { Component } from \"react\";\nimport { Button, Progress } from \"reactstrap\";\n\nimport config from \"./config\";\nimport ControlsModal from \"./ControlsModal\";\nimport Emulator from \"./Emulator\";\nimport { loadBinary } from \"./utils\";\n\nimport \"./RunPage.css\";\n\n/*\n * The UI for the emulator. Also responsible for loading ROM from URL or file.\n */\nclass RunPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      romName: null,\n      romData: null,\n      running: false,\n      paused: false,\n      controlsModalOpen: false,\n      loading: true,\n      loadedPercent: 3,\n      error: null,\n      started: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"RunPage\">\n        <nav\n          className=\"navbar navbar-expand\"\n          ref={(el) => {\n            this.navbar = el;\n          }}\n        >\n          <ul className=\"navbar-nav ml-auto mr-auto\">\n            <li className=\"navitem\">\n              <span className=\"navbar-text mr-3\">{this.state.romName}</span>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav\" style={{ width: \"200px\" }}>\n            <li className=\"navitem\">\n              <Button\n                outline\n                color=\"primary\"\n                onClick={this.toggleControlsModal}\n                className=\"mr-3\"\n              >\n                Controls\n              </Button>\n              <Button\n                outline\n                color=\"primary\"\n                onClick={this.handlePauseResume}\n                disabled={!this.state.running}\n              >\n                {this.state.paused ? \"Resume\" : \"Pause\"}\n              </Button>\n            </li>\n          </ul>\n        </nav>\n\n        {this.state.error ? (\n          this.state.error\n        ) : (\n          <div\n            className=\"screen-container\"\n            ref={(el) => {\n              this.screenContainer = el;\n            }}\n          >\n            {this.state.loading ? (\n              <Progress\n                value={this.state.loadedPercent}\n                style={{\n                  position: \"absolute\",\n                  width: \"70%\",\n                  left: \"15%\",\n                  top: \"48%\",\n                }}\n              />\n            ) : this.state.romData ? (\n              this.state.started ? (\n                <Emulator\n                  romData={this.state.romData}\n                  paused={this.state.paused}\n                  ref={(emulator) => {\n                    this.emulator = emulator;\n                  }}\n                />\n              ) : (\n                <Button\n                  outline\n                  size=\"lg\"\n                  style={{ marginTop: 200 }}\n                  color=\"primary\"\n                  onClick={() => {\n                    this.setState({ started: true });\n                  }}\n                >\n                  Click here\n                </Button>\n              )\n            ) : null}\n\n            {/* TODO: lift keyboard and gamepad state up */}\n            {this.state.controlsModalOpen && (\n              <ControlsModal\n                isOpen={this.state.controlsModalOpen}\n                toggle={this.toggleControlsModal}\n                keys={this.emulator.keyboardController.keys}\n                setKeys={this.emulator.keyboardController.setKeys}\n                promptButton={this.emulator.gamepadController.promptButton}\n                gamepadConfig={this.emulator.gamepadController.gamepadConfig}\n                setGamepadConfig={\n                  this.emulator.gamepadController.setGamepadConfig\n                }\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.layout);\n    this.layout();\n    this.load();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.layout);\n    if (this.currentRequest) {\n      this.currentRequest.abort();\n    }\n  }\n\n  load = () => {\n    this.currentRequest = loadBinary(\n      config.ROMS.tecmo.url,\n      (err, data) => {\n        if (err) {\n          this.setState({ error: `Error loading ROM: ${err.message}` });\n        } else {\n          this.handleLoaded(data);\n        }\n      },\n      this.handleProgress\n    );\n  };\n\n  handleProgress = (e) => {\n    if (e.lengthComputable) {\n      this.setState({ loadedPercent: (e.loaded / e.total) * 100 });\n    }\n  };\n\n  handleLoaded = (data) => {\n    this.setState({ running: true, loading: false, romData: data });\n  };\n\n  handlePauseResume = () => {\n    this.setState({ paused: !this.state.paused });\n  };\n\n  layout = () => {\n    let navbarHeight = parseFloat(window.getComputedStyle(this.navbar).height);\n    this.screenContainer.style.height = `${window.innerHeight -\n      navbarHeight}px`;\n    if (this.emulator) {\n      this.emulator.fitInParent();\n    }\n  };\n\n  toggleControlsModal = () => {\n    this.setState({ controlsModalOpen: !this.state.controlsModalOpen });\n  };\n}\n\nexport default RunPage;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ListPage from \"./ListPage\";\nimport RunPage from \"./RunPage\";\nimport config from \"./config\";\nimport { handleError } from \"./utils\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n    if (config.GOOGLE_ANALYTICS_CODE) {\n      GoogleAnalytics.initialize(config.GOOGLE_ANALYTICS_CODE);\n    }\n  }\n\n  render() {\n    return <RunPage />;\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error });\n    handleError(error, errorInfo);\n  }\n\n  recordPageview = ({ location }) => {\n    GoogleAnalytics.pageview(location.pathname);\n    return null;\n  };\n}\n\nexport default App;\n","import Raven from \"raven-js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport config from \"./config\";\nimport \"./index.scss\";\n\nif (config.SENTRY_URI) {\n  Raven.config(config.SENTRY_URI).install();\n}\n\nRaven.context(function() {\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\n});\n"],"sourceRoot":""}